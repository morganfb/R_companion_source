{
    "collab_server" : "",
    "contents" : "##### General organizational notes #####\n# -- organized by dataset, in order of appearance (birthweight > diabetes)\n\n\n##### 2010 US birthweight data #####\n\n###probability distribution subsection\n\nsetwd(\"~/Dropbox/working_files/teaching/open_intro/oi_biostat/prob_chapter_draft/birthwt_gestage\")\n\nbrthwt.gestage.overall.counts = as.matrix(read.table(\"bthwt_gestage_overall_counts.csv\", header=TRUE, sep=\",\",\n                                                     row.names = c(\"Total\", \"499 or less\", \"500 - 999\",\"1000 - 1499\",\"1500 - 1999\",\n                                                                   \"2000 - 2499\",\"2500 - 2999\",\"3000 - 3499\", \"3500 - 3999\",\"4000 - 4499\",\"4500 - 4999\",\n                                                                   \"5000 - 8165\", \"Not stated\"),\n                                                     col.names = c(\"Total\",\"Under.wk.20\",\"wk.20.27\",\"wk.28.31\",\"wk.32.33\",\"wk.34.36\",\"wk.37.38\",\"wk39\",\n                                                                   \"wk.40\",\"wk.41\",\"wk.42.and.over\",\"Not.stated\")))\n\nsave(brthwt.gestage.overall.counts, file=\"brthwt.gestage.overall.counts.Rdata\")\n\n# now get marginal distribution of birthwt\n\nbrthwt.marginal.counts = brthwt.gestage.overall.counts[-1,1]\n\nView(brthwt.marginal.counts)\nsum(brthwt.marginal.counts)\nbrthwt.marginal.dist = brthwt.marginal.counts / sum(brthwt.marginal.counts)\nView(brthwt.marginal.dist)\n\nbrthwt.marginal.dist.table = as.table(brthwt.marginal.dist)\nbarplot(brthwt.marginal.dist.table)\n\n# plot above is unadorned, but JV will fix that!\n\n\n###complement of an event subsection\n\n# get marginal distribution of gestational age\n\nsetwd(\"~/Dropbox/working_files/teaching/open_intro/oi_biostat/prob_chapter_draft\")\nload(\"~/Dropbox/working_files/teaching/open_intro/oi_biostat/prob_chapter_draft/birthwt_gestage/brthwt.gestage.overall.counts.Rdata\")\nView(brthwt.gestage.overall.counts)\n\n\ngestage.marginal.counts = colSums(brthwt.gestage.overall.counts[,-1], na.rm = T)\nView(gestage.marginal.counts)\n\ngestage.marginal.dist.table = as.table(gestage.marginal.counts/sum(gestage.marginal.counts))\n\nbarplot(gestage.marginal.dist.table)\n\nlibrary(xtable)\nxtable(gestage.marginal.dist.table)\n\n\n\n\n\n##### CDC diabetes data #####\n#data from http://www.cdc.gov/diabetes/pubs/statsreport14/national-diabetes-report-web.pdf\n#scroll down, use second version of calculations!\n\n###conditional probablity subsection\n\n# calculate counts not given\n\n# total population taken from US Census 2012gender_table1.xlsx\n#  see better code below this that uses census age group counts\n#  This uses inferred pop sizes from percentages\n\n\nnum.w.diabetes = 29100000\nus.2012.pop = 308827 * 1000\nnum.wo.diabetes = us.2012.pop - num.w.diabetes\nus.pop.lt.20 = (61131 + 12977 + 12756) * 1000\nnum.w.diabetes.lt.20 = 29100000 - 28900000 \nnum.wo.diabetes.lt.20 = us.pop.lt.20 - num.w.diabetes.lt.20\nnum.w.diabetes.20.44 = 4300000\nnum.wo.diabetes.20.44 = num.w.diabetes.20.44/0.041\nnum.w.diabetes.45.64 = 13400000\nnum.wo.diabetes.45.64 = num.w.diabetes.45.64 / 0.162\nnum.w.diabetes.ge.65 = 11200000\nnum.wo.diabetes.ge.65 = num.w.diabetes.ge.65 / 0.259\n\ndiabetes.age.mat = matrix(c(num.w.diabetes.lt.20, num.wo.diabetes.lt.20,\n                            num.w.diabetes.20.44, num.wo.diabetes.20.44,\n                            num.w.diabetes.45.64, num.wo.diabetes.45.64,\n                            num.w.diabetes.ge.65, num.wo.diabetes.ge.65), nrow=4, byrow = T,\n                          dimnames = list(c(\"Less than 20\", \"20 to 44\", \"45 to 64\", \"Greater than 64\"),\n                                          c(\"Diabetes\", \"No Diabetes\")))\n\ndiabetes.age.mat\n\ndiabetes.age.table = addmargins(as.table(diabetes.age.mat))\n\ndiabetes.age.table\n\ndiabetes.age.table.thousands = round(diabetes.age.table/1000, digits = 0)\n\ndiabetes.age.table.thousands\nxtable(diabetes.age.table.thousands, digits = 0)\n\nx = sum(diabetes.mat)\n\n## my us pop is too big, but I will ignore and use proportions from inferred pop size\n##  suspect the problem is in the approx numbers for cases, percentages\n##  a better fix will use actual pop sizes in age groups from census. Do that later\n\ndiabetes.mat.prop = diabetes.mat / sum(diabetes.mat)\ndiabetes.mat.prop\nsum(diabetes.mat.prop)\n\n# proportions do not sum to 1 when using us.2012.pop, so using  inferred pop size \n#    from earlier calculations.  Will track down discepancy later\n\n\n# second solution using age category counts from 2012 census\n#  a better solution would read the census excel file into R\n\n\nnum.w.diabetes = 29100000\nus.2012.pop = 308827 * 1000\nnum.wo.diabetes = us.2012.pop - num.w.diabetes\nus.pop.lt.20 = (61131 + 12977 + 12756) * 1000\nnum.w.diabetes.lt.20 = 29100000 - 28900000 \nnum.wo.diabetes.lt.20 = us.pop.lt.20 - num.w.diabetes.lt.20\nnum.w.diabetes.20.44 = 4300000\nus.pop.20.44 = (21878 + 20893 + 20326 + 19140 + 20787) * 1000\nnum.wo.diabetes.20.44 = us.pop.20.44 - num.w.diabetes.20.44\nnum.w.diabetes.45.64 = 13400000\nus.pop.45.64 = (21583 + 22372 + 20470 + 17501) * 1000\nnum.wo.diabetes.45.64 = us.pop.45.64 - num.w.diabetes.45.64 \nnum.w.diabetes.ge.65 = 11200000\nus.pop.ge.65 = (13599 + 9784 + 7331 + 5786 + 5006) * 1000\nnum.wo.diabetes.ge.65 = us.pop.ge.65 - num.w.diabetes.ge.65 \n\ndiabetes.age.mat = matrix(c(num.w.diabetes.lt.20, num.wo.diabetes.lt.20,\n                            num.w.diabetes.20.44, num.wo.diabetes.20.44,\n                            num.w.diabetes.45.64, num.wo.diabetes.45.64,\n                            num.w.diabetes.ge.65, num.wo.diabetes.ge.65), nrow=4, byrow = T,\n                          dimnames = list(c(\"Less than 20 years\", \"20 to 44 years\", \n                                            \"45 to 64 years\", \"Greater than 64 years\"),\n                                          c(\"Diabetes\", \"No Diabetes\")))\n\ndiabetes.age.mat\n\ndiabetes.age.table = addmargins(as.table(diabetes.age.mat))\n\ndiabetes.age.table\n\ndiabetes.age.table.thousands = round(diabetes.age.table/1000, digits = 0)\n\ndiabetes.age.table.thousands\nxtable(diabetes.age.table.thousands, digits = 0)\n\nx = sum(diabetes.age.mat)\n\nx\n## my us pop is still too big, probably rounding\n\n\n\ndiabetes.age.table.prop = diabetes.age.table / sum(diabetes.age.mat)\ndiabetes.age.table.prop\nsum(diabetes.mat.prop)\n\nxtable(diabetes.age.table.prop, digits = 3)\n\n13400000/81926000\n\n11200/41506\n\n\n\n\n##### asthma data #####\n# not used in chapter as of 2Oct2015, note that data is not in data_working_dir!\n\nus.population =  281421906 \nnum.asthma.below.poverty = 5086900\nprev.asthma.below.poverty = num.asthma.below.poverty / us.population\nnum.asthma.100.200.poverty = 5056100\nprev.asthma.100.200.poverty = num.asthma.100.200.poverty / us.population\nnum.asthma.above.200.poverty = 14423700\nprev.asthma.above.200.poverty = num.asthma.above.200.poverty / us.population\n\n# using census data from 2009\n#  need numbers of individuals in each of the poverty categories to complete this as a conditional prob question\n\n# I did not document where the overall population proportions come from.\n\nprev.nonasthma.below.poverty = 0.143 - prev.asthma.below.poverty\nprev.nonasthma.above.200.poverty = 0.66 - prev.asthma.above.200.poverty\n\nprop.us.population.100.200.poverty = 0.340 - 0.143\nprev.nonasthma.100.200.poverty = prop.us.population.100.200.poverty - prev.asthma.100.200.poverty\n\nprev.asthma.below.poverty + prev.nonasthma.below.poverty + \n  prev.asthma.100.200.poverty + prev.nonasthma.100.200.poverty +\n  prev.asthma.above.200.poverty + prev.nonasthma.above.200.poverty\n\n# create  matrices then tables with asthma, poverty level joint distribution\n\n# bar graph of distribution of number heads, 3 coin tosses\n\nx.values = c(0, 1, 2, 3)\nx.probs = c(1/8, 3/8, 3/8, 1/8)\n\nx.dist.table = as.table(cbind(x.values, x.probs))\nx.dist.table\nbarplot(x.probs, names.arg = c(\"0\", \"1\", \"2\", \"3\"), xlab = \"Values of X\", ylab = \"Probabilities\")\n\n# graphing a binomial dist \n\nn = 20\np = 0.2\nplot( seq(0,n), dbinom( seq(0,n), n, p), type='h', lwd=10,\n      xlim=c(-1,n+1), xlab='Values of X', ylab='Probability')\n\npbinom( q = 11, size = 20, prob = 0.2, lower.tail = F)\n\n### health plan example\n\npremium = 12*79\n\n948 + 1*20\n948 + 3*20\n948 + 4*20\n948 + 8*20\n\n(0.3)*(948 + 1*20)\n(0.4)*(948 + 3*20)\n(0.2)*(948 + 4*20)\n(0.1)*(948 + 8*20)\n\n(0.3)*(948 + 1*20) +\n(0.4)*(948 + 3*20) +\n(0.2)*(948 + 4*20) +\n(0.1)*(948 + 8*20)\n\n948 + 1*20 - 1010.00\n948 + 3*20 - 1010.00\n948 + 4*20 - 1010.00\n948 + 8*20 - 1010.00\n\n(948 + 1*20 - 1010.00)^2\n(948 + 3*20 - 1010.00)^2\n(948 + 4*20 - 1010.00)^2\n(948 + 8*20 - 1010.00)^2\n\n(948 + 1*20 - 1010.00)^2\n(948 + 3*20 - 1010.00)^2\n(948 + 4*20 - 1010.00)^2\n(948 + 8*20 - 1010.00)^2\n\n\nsqrt(5*39.45)\n\nsqrt(3.0^2 + 3.0^2 + 3.0^2 + 3.1^2)\n\n\n# joint distribution for health care costs\n\ncol.1 = c(0.18, 0.15, 0.04, 0.03)\ncol.2 = c(0.12, 0.25, 0.16, 0.07)\n\njoint.dist.matrix = as.matrix(cbind(col.1, col.2), rownames = c(\"$968\", \"$1008\",   \"$1028\", \"$1108\"),\n                              colnames = c(\"$968\", \"$988\"))\n\n\njoint.dist.table = as.table(cbind(col.1, col.2))\nlibrary(xtable)\n\nprint(xtable(joint.dist.matrix), type=\"latex\")\n\nxtable(joint.dist.table, caption=\"Joint Distribution of Health Care Costs\", label = \"healthVisitsJointDistribution\", \n       include.rownames = TRUE, include.colnames = TRUE)\n\n\n\n\n",
    "created" : 1456169711009.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3139808655",
    "id" : "71DFC871",
    "lastKnownWriteTime" : 1445449581,
    "last_content_update" : 1445449581,
    "path" : "~/Dropbox/open_intro/oi_biostat/data_working_dir/R_code/ch2_prob_oi_biostat/ch2_prob_oi_biostat_21oct2015.R",
    "project_path" : null,
    "properties" : {
    },
    "relative_order" : 13,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}