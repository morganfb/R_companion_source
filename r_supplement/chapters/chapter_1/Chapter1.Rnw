\vspace{0.5cm} 

This chapter introduces basic commands for manipulating datasets, including how to calculate numerical summaries, create tables from data, and make graphical plots. 

\section{Case study: preventing peanut allergies}

The \texttt{LEAP} dataset contains the results of the "Learning Early About Peanut Allergy" (LEAP) study, an experiment conducted to assess whether early exposure to peanut products reduces the probability of peanut allergies developing. To access the documentation associated with the dataset, run the following command: 

<<eval=FALSE>>=
help(LEAP)
@

A file will appear in the Help pane that provides some basic information about the dataset:

\begin{itemize}
\item \textbf{Description:} A general overview of the dataset. 
\item \textbf{Usage:} Instructions for how to load the dataset. 
\item \textbf{Format:} The names and descriptions of each variable in the dataset, including information about variable type and measurement units.
\item \textbf{Details:} Additional details about the conditions under which the data were collected.
\item \textbf{Source}: Information about where the data originates from.
\end{itemize}

To view the dataset itself, run:

<<eval=FALSE>>=
View(LEAP)
@

In the main console pane, a window will appear that shows the entire dataset. The variable names are displayed across the top, as the names of the columns. Data for each case in the study are contained within the rows. Note that the farthest left column shows the \textbf{indices}, which are computer-generated values that allow specific rows in the dataset to be accessed. These can be used to view a specific portion of the data.

For example, to print out data contained in the first 5 rows and first 3 columns of the data, use the following syntax:

<<>>=
LEAP[1:5,1:3]
@

The bracket notation after the dataset name implies location; the syntax \texttt{dataset[rows,columns]} specifies rows 1 through 5 and columns 1 through 6. To access only the first 5 rows, but all the columns, leave an empty space where the columns would usually be specified:

<<>>=
## note the space (or lack of text after the comma)
LEAP[1:5, ]
@

Alternatively, since there are 6 columns in the dataset, the command \texttt{LEAP[1:5,1:6]} would also achieve the same result. This is a common theme in \textsf{R} -- there can be several ways to accomplish a desired result. 

\textit{OI Biostat} Table 1.1 shows the participant ID, treatment group, and overall outcome for five patients. It is not specified in the main text, but the data are specifically from rows 1, 2, 3, 529, and 530. The command \texttt{c()} can be used to bind the row numbers into a list, as well as to create a list of the desired columns. Columns can be referred to by name, instead of by number:

<<Table.1.1>>=
## OI Biostat Table 1.1
LEAP[c(1, 2, 3, 529, 530),c("participant.ID", "treatment.group",
                         "overall.V60.outcome")]
@

Two-way summary tables organize the data according to two variables and display the number of counts matching each combination of variable categories. The following code corresponds to \textit{OI~Biostat} Table~1.2, which groups participants into categories based on treatment group and overall outcome. In the \texttt{table()} command, the first variable specifies the rows and the second variable specifies the columns. The addition of the \texttt{addmargins()} command prints the sums of the rows and columns on the sides of the table.

<<Table.1.2>>=
## Table 1.2
table(LEAP$treatment.group, LEAP$overall.V60.outcome)
addmargins(table(LEAP$treatment.group, LEAP$overall.V60.outcome))

@


\section{Data Basics}

Entire datasets can be partitioned into data frames using bracket notation. For example, \textit{OI Biostat} Table 1.3 shows a data frame consisting of rows 1-3 and 150 (and all columns) from the \texttt{frog.altitude} dataset. The data frame can then be given a specific name, such as \texttt{frog.df}, and directly called on for later operations.

%%JV: order of variables should be the same between companion and oi biostat

<<>>=
## Table 1.3
frog.df = frog.altitude.data[c(1:3, 150),]
frog.df
@

Similarly, matrix notation can be used to create \textit{OI Biostat} Table 1.5.

<<>>=
## Table 1.5
famuss[c(1,2,3,595),c( "sex", "age", "race", "height", "weight", "actn3.r577x",
                       "ndrm.ch")]
@

\stepcounter{section}
\section{Numerical Data}

Numerical summaries can be quickly and easily calculated using \textsf{R}. The \texttt{summary()} command is one way to access several numerical summaries at once, including the minimum and maximum values of a variable:
<<>>=
summary(frog.altitude.data$clutch.volume)
@

\subsection{Measures of center: mean and median}

The \textbf{mean} of a numerical value is the sum of all observations divided by the number of observations, where $x_1, x_2, \dots, x_n$ represent the $n$ observed values:

\begin{align*}
		\overline{x} = \frac{x_1+x_2+\cdots+x_n}{n}
\end{align*}

This calculation can be completed in \textsf{R} the same way as a hand calculation is done:
<<>>=
# identify n, the number of observations in the data
n = length(frog.altitude.data$clutch.volume)
n

# calculate the sum of all observations and divide by n
sum(frog.altitude.data$clutch.volume)/n
@

Alternatively, the \textsf{R} function \texttt{mean()} can be directly applied to the variable of interest:
<<>>=
x.bar = mean(frog.altitude.data$clutch.volume)
x.bar

## round to the first decimal
round(x.bar, 1)
@

To identify the \textbf{median} value, use the following command:

<<>>=
median(frog.altitude.data$clutch.volume)
@

\subsection{Measures of spread: standard deviation and variance}

The distance of a single observation from the mean is its \textbf{deviation}. The following command produces the deviations for the $1^{st}$, $2^{nd}$, $3^{rd}$, and $431^{th}$ observations in the \texttt{clutch.volume} variable.

<<>>=
frog.altitude.data$clutch.volume[c(1,2,3,431)]-x.bar
@

The sample \textbf{standard deviation} is computed as the square root of the \textbf{variance}, which is the sum of squared deviations divided by the number of observations minus 1. 

\begin{align*}
		s = \sqrt{\frac{({x_1 - \overline{x})}^{2}+({x_2 - \overline{x})}^{2}+\cdots+({x_n - \overline{x})}^{2}}{n-1}}
\end{align*}

The following steps illustrate how to calculate the variance and standard deviation using the formula: 

<<>>=
# calculate all deviations
dev = frog.altitude.data$clutch.volume - x.bar

# sum the squares of the deviations and divide by n - 1
var = (sum(dev^2))/(n-1)
var

# take the square root of the variance
sd = sqrt(var)
sd
@

Alternatively, use the \textsf{R} functions \texttt{var()} and \texttt{sd()}:

<<>>=
var(frog.altitude.data$clutch.volume)
sd(frog.altitude.data$clutch.volume)
@

Variability can also be measured using the \textbf{interquartile range (IQR)}, which equals the third quartile (the $75^{th}$ percentile) minus the first quartile (the $25^{th}$ percentile). 

<<>>=
IQR(frog.altitude.data$clutch.volume)
@

\subsection{Robust statistics}

In the \texttt{frog.altitude} dataset, there are four extreme values for clutch volume that are larger than 2,000 mm$^3$. To illustrate how the summary statistics are influenced by extreme values, \textit{OI Biostat} Table 1.15 shows summary statistics for the data without the four largest observations. 

The subset of the data with values less than 2,000 mm$^3$ can be pulled out by first specifying a logical condition, which assigns \texttt{TRUE} or \texttt{FALSE} to each entry. 

<<>>=
# logical condition
less.than.2000 = frog.altitude.data$clutch.volume<= 2000

# view the first 5 values
less.than.2000[1:5]
@

Bracket notation can then be used to calculate summary statistics specifically for the values in \texttt{clutch.volume} that satisfy the logical condition.

<<>>=
## robust estimates
median(frog.altitude.data$clutch.volume[less.than.2000])
IQR(frog.altitude.data$clutch.volume[less.than.2000])

## non-robust estimates
mean(frog.altitude.data$clutch.volume[less.than.2000])
sd(frog.altitude.data$clutch.volume[less.than.2000])
@

\subsection{Visualizing distributions of data} \label{graphs}
While most numerical summaries can be calculated by hand, \textsf{R} is essential for creating graphical summaries.

\subsubsection{Histograms} 
A \textbf{histogram} provides a view of data density. Observations are sorted into different bins based on their value, and the histogram shows the number of observations in each bin. The following command produces a histogram of the \texttt{clutch.volume} variable.

<<fig.height=3.5, fig.width=5.5>>=
hist(frog.altitude.data$clutch.volume)
@

The \texttt{hist()} function takes several arguments:
\begin{itemize}
\item \texttt{x}: variable of interest
\item \texttt{breaks}: number of bins
\item \texttt{col}: color of the bars, enclosed in \texttt{""}
\item \texttt{xlab}: $x$-axis label, enclosed in \texttt{""}
\item \texttt{ylab}: $y$-axis label, enclosed in \texttt{""}
\item \texttt{xlim}: range of values for the $x$-axis, in the form \texttt{c(lower bound, upper bound)}
\item \texttt{ylim}: range of values for the $y$-axis, in the form \texttt{c(lower bound, upper bound)}
\item \texttt{main}: main title of the plot, enclosed in \texttt{""} 
\item \texttt{plot}: if \texttt{TRUE} (default), a histogram is plotted; otherwise, data about the histogram is returned
\end{itemize}

As seen above, not all arguments must be specified; only the \texttt{x} argument is necessary. When options are not specified, \textsf{R} uses the default options, such as the default color of white for the histogram bars.

The following command reproduces \textit{OI Biostat} Table 1.16 and Figure 1.17.

<<fig.height=3.5, fig.width=5.5>>=
## Table 1.16
hist(frog.altitude.data$clutch.volume, breaks = 14, plot = FALSE)$counts

## Figure 1.17
hist(x = frog.altitude.data$clutch.volume, breaks = 14, col = "dodgerblue",
     xlab = "Clutch Volume", ylab = "Frequency", ylim = c(0, 100),
     main = "Histogram of Clutch Volume Frequencies")
@


\subsubsection{Boxplots}

A \textbf{boxplot} uses five statistics to summarize a dataset, in addition to showing unusual observations. The following command produces a boxplot of the \texttt{clutch.volume} variable.

\begin{centering}
<<fig.height=4, fig.width=3.5>>=
boxplot(frog.altitude.data$clutch.volume)
@
\end{centering}

Like the \texttt{hist()} function, the \texttt{boxplot()} function also takes several arguments that allow for certain parameters to be specified:
\begin{itemize}
\item \texttt{x}: variable of interest
\item \texttt{axes}: if \texttt{TRUE}, numbers are shown on the axes
\item \texttt{col}: color of the boxplot, enclosed in \texttt{""}
\item \texttt{xlab}: $x$-axis label, enclosed in \texttt{""}
\item \texttt{ylab}: $y$-axis label, enclosed in \texttt{""}
\item \texttt{xlim}: range of values for the $x$-axis, in the form \texttt{c(lower bound, upper bound)}
\item \texttt{ylim}: range of values for the $y$-axis, in the form \texttt{c(lower bound, upper bound)}
\item \texttt{main}: main title of the plot, enclosed in \texttt{""} 
\end{itemize}

The following command reproduces a simplified version of \textit{OI Biostat} Figure 1.19. 

\begin{centering}
<<fig.height=4, fig.width=3.5>>=
## Figure 1.19
boxplot(x = frog.altitude.data$clutch.volume, ylab = 'Clutch Volume', axes = TRUE,
        ylim = range(frog.altitude.data$clutch.volume))
@
\end{centering}

\subsection{Scatterplots and correlation}
\textbf{Scatterplots} can be used to visualize the relationship between two numerical variables. In the \texttt{plot()} command, either a comma or a tilde can be used between the variable names; i.e., \texttt{plot(x,y)} versus \texttt{plot(y $\sim$ x)}.

<<fig.height=4, fig.width=4, fig.align="center">>=
plot(frog.altitude.data$body.size, frog.altitude.data$clutch.volume)
@

The \texttt{plot()} command takes the following arguments: 

\begin{itemize}
\item \texttt{x}: variable defining the $x$-coordinates 
\item \texttt{y}: variable defining the $y$-coordinates 
\item \texttt{col}: color of the dots, enclosed in \texttt{""}
\item \texttt{type}: by default, data points are marked with dots; other options include \texttt{"l"} which draws a line chart, or \texttt{"b"} which includes both dots and lines
\item \texttt{xlab}: $x$-axis label, enclosed in \texttt{""}
\item \texttt{ylab}: $y$-axis label, enclosed in \texttt{""}
\item \texttt{xlim}: range of values for the $x$-axis, in the form \texttt{c(lower bound, upper bound)}
\item \texttt{ylim}: range of values for the $y$-axis, in the form \texttt{c(lower bound, upper bound)}
\item \texttt{main}: main title of the plot, enclosed in \texttt{""} 
\end{itemize}

The \textit{plot} command has an interesting feature that you can either specify your $x$ and $y$ variables by running $plot(x,y)$ or by running $plot(y~x)$.  Either command will give the same result.  

The following command reproduces a simplified version of \textit{OI Biostat} Figure 1.20. The additional argument \texttt{pch} changes the appearance of the dots to filled dots, which is specified by \texttt{19}. 

\begin{centering}
<<fig.height=4, fig.width=4>>=
## Figure 1.20
plot(frog.altitude.data$clutch.volume~frog.altitude.data$body.size, col = "dodgerblue",
     pch = 19, xlab = "Female Body Size (cm)", ylab = expression("Clutch Volume" ~ (mm^3)))
@
\end{centering}

Simplified versions of \textit{OI Biostat} Figures 1.21, 1.22, and 1.23 can also be reproduced using \texttt{plot()}.

\subsection{Correlation}

\textbf{Correlation} is a numerical measure of the strength of a linear relationship. The formula for correlation uses the pairing of the two variables, just as the scatterplot does in a graph, so the data used in calculating correlation is a set of $n$ ordered pairs $(x_1,y_1), (x_2,y_2), \ldots, (x_n, y_n) $.

The correlation between two variables $x$ and $y$ is given by:
		\begin{align*}
          r &=  \frac{1}{n-1}\sum^{n}_{i=1}
          \left(\frac{x_{i}-\overline{x}}
          {s_{x}}\right)\left(\frac{y_{i}-\overline{y}}{s_{y}}\right)
    \end{align*}      
where $(x_1,y_1), (x_2,y_2), \ldots, (x_n, y_n)$ are the $n$ paired values of $x$ and $y$, and $s_x$ and $s_y$ are the sample standard deviations of the $x$ and $y$ variables, respectively.     

The following illustrates the calculations for finding the correlation coefficient of (1,5), (2, 4), and (3,0), as shown in \textit{OI Biostat} Example 1.13.

<<fig.align = "center">>=
# define variables
x = c(1, 2, 3)
y = c(5, 4, 0)

# calculate sample means
x.bar = mean(x)
y.bar = mean(y)

# calculate sample sd's
sd.x = sd(x)
sd.y = sd(y)

# calculate products and sum of products
x.component = (x - x.bar)/(sd.x)
y.component = (y - y.bar)/(sd.y)
products = x.component * y.component
products.sum = sum(products)

# divide by n - 1
n = length(x)   ## n also equals length(y)
r = products.sum / (n - 1)
r

@

It is much easier to use the \texttt{cor()} function to find correlation. 

<<fig.height = 3.5, fig.width=3.5, fig.align = "center">>=
## Figure 1.22
cor(x,y)
plot(x,y)
@

The correlation can also be calculated for the income versus life expectancy data plotted in \textit{OI Biostat} Figure 1.23. In this case, the command includes the argument \texttt{use = "complete.obs"} to allow for the computation to disregard any missing values in the dataset.

<<fig.height=5, fig.width=6, tidy=TRUE, tidy.opts=list(width.cutoff=60)>>=
cor(life.expectancy.income$income, life.expectancy.income$life.expectancy, use = "complete.obs")
@

\subsection{Transforming Data}
A \textbf{transformation} is a rescaling of data using a function. The figure below shows the original plot of income data as well as the plot of the log-transformed data. Note that the \texttt{log} command in \textsf{R} computes natural logarithms.

The function \texttt{par()} creates partitions in the graphing output. In this case, specifying \texttt{mfrow = c(1,2)} produces 1 row and 2 columns.

<<fig.height=4, tidy=TRUE, tidy.opts=list(width.cutoff=60)>>=
## Figure 1.26
par(mfrow=c(1,2))       ## this line allows two plots to print at the same time
hist(life.expectancy.income$income, breaks = 12, xlab = 'Income (USD)',
         ylab = "Frequency", ylim = c(0, 120), main = "Untransformed")

hist(log(life.expectancy.income$income), breaks = 12, xlab = 'Income (log USD)',
         ylab = "Frequency", ylim = c(0, 30), main = "Log Transformed")
@

Transformations can also be applied to both variables when exploring a relationship. The following figure shows simplified versions of \textit{OI Biostat} Figures 1.23 and 1.27.

<<fig.height=4, tidy=TRUE, tidy.opts=list(width.cutoff=60)>>=
## Figure 1.23 and Figure 1.27
par(mfrow=c(1,2))
plot(life.expectancy.income$income, life.expectancy.income$life.expectancy,
     ylab = "Life Expectancy (years)", xlab = "Per Capita Income (USD)",
     main = "Untransformed")
plot(log(life.expectancy.income$income), log(life.expectancy.income$life.expectancy),
     ylab = "Life Expectancy (log years)", xlab = "Per Capita Income (log USD)",
     main = "Transformed")
@

\section{Categorical Data}
\subsection{Contingency Tables}

A \textbf{frequency table} shows the counts for each category within a variable. The following \texttt{table()} command produces a frequency table for the \texttt{actn3.r577x} variable.

<<>>=
## Table 1.28
addmargins(table(famuss$actn3.r577x))
@

A \textbf{contingency table} summarizes data for two categorical variables, such as race and genotype in \textit{OI Biostat} Table 1.29. 

<<>>=
## Table 1.29
addmargins(table(famuss$race, famuss$actn3.r577x))
@

\textit{OI Biostat} Table 1.30 shows a contingency table with row proportions, computed as the counts divided by their row totals. The \texttt{prop.table()} command produces a table with row proportions, as specified by the \texttt{1} in the argument.

<<>>=
## Table 1.30
counts.table = table(famuss$race, famuss$actn3.r577x)
row.prop.table = prop.table(counts.table, 1)
row.prop.table
@

Alternatively, a contingency table can be created with column proportions by changing the \texttt{1} in \texttt{prop.table()} to a \texttt{2}. 

<<warning=FALSE>>=
## Table 1.31
counts.table = table(famuss$race, famuss$actn3.r577x)
col.prop.table = prop.table(counts.table, 2)
col.prop.table
@

\subsection{Bar Plots}

A \textbf{bar plot} is a common way to display a single categorical variable, either from count data or from proportions. The \texttt{barplot()} command requires values to be input in a table format. In the below example, the \texttt{table()} command is nested within the \texttt{barplot()} command.

<<fig.height=4, tidy=TRUE>>=
## Figure 1.32
par(mfrow=c(1,2))
barplot(table(famuss$actn3.r577x), main = "Count Barplot")
barplot(table(famuss$actn3.r577x)/sum(table(famuss$actn3.r577x)), main = "Frequency Barplot")  ## frequency barplot
@

\newpage

\subsection{Segmented Bar Plot}

A \textbf{segmented bar plot} draws from a contingency table to display information about two categorical variables. The following code reproduces \textit{OI Biostat} Figure 1.33a, in which a bar plot was created using the \texttt{actn3.r577x} variable, with each group divided by the levels of race. The simplified version of the plot uses the default greyscale shading; it is also possible to specify a list of colors using \texttt{c()}. 

The argument \texttt{legend} can be used to specify whether the row names or the column names are used for the legend. 

<<tidy = TRUE, fig.height=5, fig.width = 5.5, tidy.opts=list(width.cutoff=60), fig.align = "center">>=
## Figure 1.31a
# First, create a table of the data that is sorted
genotype.race = matrix(table(famuss$actn3.r577x, famuss$race), ncol=3, byrow=T)

# Second, change the column and row names on the table
colnames(genotype.race)=c("CC", "CT", "TT")
rownames(genotype.race)=c("African Am", "Asian", "Caucasian", "Hispanic", "Other")

# Third, plot the barplot where colors are specified
barplot(genotype.race, col=c("gray", "firebrick1", "dodgerblue", "darkgreen", "gold"), ylim=c(0,300), width=2, legend = rownames(counts.table))
@

\newpage

A \textbf{standardized segmented bar plot} uses proportions to scale the data, and draws from a contingency table with proportions. Setting \texttt{ylim} from 0 to 1.7 allows for enough empty space on the plot so that the legend does not overlap the bars.

<<tidy = TRUE, fig.height=5, fig.width = 4, tidy.opts=list(width.cutoff=60), fig.align = "center">>=
## Figure 1.33b
counts.table = (table(famuss$race, famuss$actn3.r577x))
row.prop.table = prop.table(counts.table, 2)

barplot(row.prop.table, col=c("gray", "firebrick1", "dodgerblue", "darkgreen", "gold"), ylim = c(0, 1.7), legend = rownames(counts.table))
@

<<tidy = TRUE, fig.height=5.5, fig.width = 4, tidy.opts=list(width.cutoff=60), fig.align = "center">>=
## Figure 1.31b
# First, create table of proportions
prop.genotype.race <- prop.table(genotype.race, 2)

# Second, change the column and row names on the table
colnames(prop.genotype.race)=c("CC", "CT", "TT")
rownames(prop.genotype.race)=c("African Am", "Asian", "Caucasian", "Hispanic", "Other")

# Third, plot the output
barplot(prop.genotype.race, col=c("gray", "firebrick1", "dodgerblue", "darkgreen", "gold"), ylim=c(0, 1.7), width=2, legend = rownames(counts.table))
@

In \textit{OI Biostat} Figure 1.34, the data from the contingency table are organized differently, with each bar representing a level of \texttt{race}. To make this change, reverse the order of the variables in \texttt{table()}

<<tidy = TRUE, fig.height=4, tidy.opts=list(width.cutoff=60), fig.align = "center">>=
## Figure 1.34
# Plotting two graphs next to each other
par(mfrow=(c(1,2)))

# Setting up the table and changing column/row names
race.genotype = matrix(table(famuss$race, famuss$actn3.r577x), ncol=5, byrow=T)
colnames(race.genotype)=c("African Am", "Asian", "Caucasian", "Hispanic", "Other")
rownames(race.genotype)=c("CC", "CT", "TT")

# Creating segmented bar plot (Figure 1.34a)
barplot(race.genotype, col=c("dodgerblue", "darkgreen", "gold"), ylim=c(0,500), width=2, legend=rownames(race.genotype))

# Creating standardized segmented bar plot (Figure 1.34b)
prop.race.genotype <- prop.table(race.genotype, 2)
barplot(prop.race.genotype, col=c("dodgerblue", "darkgreen", "gold"), ylim=c(0, 1.7), width=2, legend=rownames(race.genotype))
@

\subsection{Comparing numerical data across groups}
\subsubsection{Side-by-side boxplots}

The \textbf{side-by-side} boxplot is a useful tool for comparing the distribution of numerical data across categories. \textit{OI Biostat} Figure 1.35a shows a side-by-side boxplot for percent change in non-dominant arm strength grouped by genotype. The response variable $y$ comes before the tilde and the explanatory variable $x$; in this case, the response variable is percent change in strength.

<<tidy=TRUE, fig.height=4, tidy.opts=list(width.cutoff=40), fig.align = "center">>=
## Figure 1.35(a)
boxplot(famuss$ndrm.ch ~ famuss$actn3.r577x, 
        ylab = "% Change in Non-Dominant Arm Strength", xlab = "Genotype")
@

\textit{OI Biostat} Figure 1.36 shows a larger side-by-side boxplot which compares the distribution of frog clutch sizes for different altitudes.

<<tidy = TRUE, fig.height=4, tidy.opts=list(width.cutoff=60), fig.align = "center">>=
## Figure 1.36
boxplot(frog.altitude.data$clutch.volume ~ frog.altitude.data$altitude, xlab = "Clutch Volume", ylab = "Altitude")
@

\subsubsection{Hollow Histograms}

A \textbf{hollow histogram} plots the outlines of histograms for each group onto the same axes. To plot a hollow histogram, specify any axis limits and labels in the command for the first histogram; the subsequent histograms require the argument \texttt{add = T} in order for them to be overlaid on top of the first plot.

<<tidy = TRUE, fig.height = 4, fig.align = "center">>=
## Figure 1.35(b)
hist(famuss$ndrm.ch[famuss$actn3.r577x == "CC"], breaks = 20, border = "dodgerblue",
     xlab = "% Change in Non-Dominant Arm Strength", ylim = c(0,50), xlim = c(0,250),
     main = "Percent Change in Non-Dominant Arm Strength by Genotype")
hist(famuss$ndrm.ch[famuss$actn3.r577x == "CT"], breaks = 20, border = "darkgreen", 
     add = T)
hist(famuss$ndrm.ch[famuss$actn3.r577x == "TT"], breaks = 20, border = "firebrick1",
     add = T)

legend('topright',
       col = c("dodgerblue", "darkgreen", "firebrick1"),
       lwd = c(1, 1, 1),     ## line width
       legend = c('CC', 'CT', 'TT'))    ##legend labels
@

\section{Genomic Data}

% JV: Golub data (golub_exprs_pheno) needs to be added to the package

% JV: Add material from 102 section 2 to this section, as an exercise? Doesn't seem useful to just reproduce the figures in OI Biostat 1.6 here.

<<tidy = TRUE, fig.height = 4, fig.width = 4, fig.align = "center">>=
boxplot(Golub[,7:9])
@

